[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "deploy-tool"
# 从 deploy_tool/__init__.py 动态读取版本
dynamic = ["version"]
description = "A powerful deployment tool for ML models and algorithms"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "vistart", email = "i@vistart.me"},
]
keywords = ["deployment", "machine-learning", "packaging", "devops"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Typing :: Typed",
]
requires-python = ">=3.8"

dependencies = [
    "click>=8.0",
    "rich>=10.0",
    "pyyaml>=6.0",
    "aiofiles>=0.8",
    "python-dateutil>=2.8",
    "jsonschema>=4.0",
    "packaging>=21.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.20",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
    "black>=22.0",
    "isort>=5.11",
    "flake8>=5.0",
    "mypy>=0.990",
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.2",
    "tox>=4.0",
    "pre-commit>=3.0",
]
bos = [
    "bce-python-sdk>=0.8",
]
s3 = [
    "boto3>=1.20",
]
lz4 = [
    "lz4>=4.0",
]
all = [
    "deploy-tool[bos,s3,lz4]",
]

[project.urls]
Homepage = "https://github.com/vistart/python_deploy_tool"
Documentation = "https://vistart_python_deploy_tool.readthedocs.io"
Repository = "https://github.com/vistart/python_deploy-tool.git"
Issues = "https://github.com/vistart/python_deploy_tool/issues"
Changelog = "https://github.com/vistart/python_deploy_tool/blob/main/CHANGELOG.md"

[project.scripts]
deploy-tool = "deploy_tool.cli.main:main"

[tool.hatch.version]
path = "deploy_tool/__init__.py"
pattern = '^__version__\s*=\s*"(?P<version>[^"]+)"$'

[tool.hatch.build]
include = [
    "deploy_tool/**/*.py",
    "deploy_tool/**/*.pyi",
    "deploy_tool/py.typed",
    "deploy_tool/templates/**/*",
    "LICENSE",
    "README.md",
]
exclude = [
    "tests/**",
    "docs/**",
    "examples/**",
    "scripts/**",
    "*.pyc",
    "**/__pycache__",
    "**/*.py[cod]",
    "**/*.so",
    "**/.DS_Store",
    "**/.*.swp",
    ".git*",
]

[tool.hatch.build.targets.wheel]
packages = ["deploy_tool"]

# 保留其他工具配置
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
]

[tool.coverage.run]
source = ["deploy_tool"]
omit = ["*/tests/*", "*/__main__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]